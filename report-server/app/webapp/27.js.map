{"version":3,"sources":["webpack:///./node_modules/_antd@4.9.1@antd/es/message/style/css.js","webpack:///./node_modules/_antd@4.9.1@antd/es/message/style/index.css?9b2d","webpack:///./node_modules/_antd@4.9.1@antd/es/message/style/index.css","webpack:///./src/page/function/FunctionClass.jsx"],"names":["FormItem","Form","Item","Search","localStorge","LocalStorge","_function","Function","EditableContext","React","createContext","EditableRow","form","index","props","EditableFormRow","create","EditableCell","getInput","editing","dataIndex","title","inputType","record","restProps","getFieldDecorator","margin","rules","required","message","initialValue","children","Component","FunctionClass","isEditing","key","state","editingKey","cancel","setState","list","pageNum","perPage","listType","className","columns","editable","render","text","save","marginRight","edit","deleteFunctionClss","loadFunctionClassList","listParam","getAllFunctionClass","then","response","data","e","name","target","value","trim","id","confirm","obj","class_id","success","error","class_name","saveFunctionClass","resultCode","validateFields","row","newData","findIndex","item","updateFunctionClass","splice","push","map","components","body","cell","col","onCell","width","marginBottom","saveClick"],"mappings":"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","file":"27.js","sourcesContent":["import '../../style/index.css';\nimport './index.css';","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../../_css-loader@1.0.0@css-loader/index.js!../../../../_postcss-loader@3.0.0@postcss-loader/src/index.js!../../../../_sass-loader@7.1.0@sass-loader/lib/loader.js!./index.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// Prepare cssTransformation\nvar transform;\n\nvar options = {\"hmr\":true}\noptions.transform = transform\n// add the styles to the DOM\nvar update = require(\"!../../../../_style-loader@0.19.1@style-loader/lib/addStyles.js\")(content, options);\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../../_css-loader@1.0.0@css-loader/index.js!../../../../_postcss-loader@3.0.0@postcss-loader/src/index.js!../../../../_sass-loader@7.1.0@sass-loader/lib/loader.js!./index.css\", function() {\n\t\t\tvar newContent = require(\"!!../../../../_css-loader@1.0.0@css-loader/index.js!../../../../_postcss-loader@3.0.0@postcss-loader/src/index.js!../../../../_sass-loader@7.1.0@sass-loader/lib/loader.js!./index.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}","exports = module.exports = require(\"../../../../_css-loader@1.0.0@css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"/* stylelint-disable at-rule-empty-line-before,at-rule-name-space-after,at-rule-no-unknown */\\n/* stylelint-disable no-duplicate-selectors */\\n/* stylelint-disable */\\n/* stylelint-disable declaration-bang-space-before,no-duplicate-selectors,string-no-newline */\\n.ant-message {\\n  box-sizing: border-box;\\n  margin: 0;\\n  padding: 0;\\n  color: rgba(0, 0, 0, 0.85);\\n  font-size: 14px;\\n  font-variant: tabular-nums;\\n  line-height: 1.5715;\\n  list-style: none;\\n  -webkit-font-feature-settings: 'tnum';\\n  font-feature-settings: 'tnum';\\n  position: fixed;\\n  top: 8px;\\n  left: 0;\\n  z-index: 1010;\\n  width: 100%;\\n  pointer-events: none; }\\n\\n.ant-message-notice {\\n  padding: 8px;\\n  text-align: center; }\\n\\n.ant-message-notice-content {\\n  display: inline-block;\\n  padding: 10px 16px;\\n  background: #fff;\\n  border-radius: 2px;\\n  box-shadow: 0 3px 6px -4px rgba(0, 0, 0, 0.12), 0 6px 16px 0 rgba(0, 0, 0, 0.08), 0 9px 28px 8px rgba(0, 0, 0, 0.05);\\n  pointer-events: all; }\\n\\n.ant-message-success .anticon {\\n  color: #52c41a; }\\n\\n.ant-message-error .anticon {\\n  color: #ff4d4f; }\\n\\n.ant-message-warning .anticon {\\n  color: #faad14; }\\n\\n.ant-message-info .anticon,\\n.ant-message-loading .anticon {\\n  color: #1890ff; }\\n\\n.ant-message .anticon {\\n  position: relative;\\n  top: 1px;\\n  margin-right: 8px;\\n  font-size: 16px; }\\n\\n.ant-message-notice.move-up-leave.move-up-leave-active {\\n  -webkit-animation-name: MessageMoveOut;\\n  animation-name: MessageMoveOut;\\n  -webkit-animation-duration: 0.3s;\\n  animation-duration: 0.3s; }\\n\\n@-webkit-keyframes MessageMoveOut {\\n  0% {\\n    max-height: 150px;\\n    padding: 8px;\\n    opacity: 1; }\\n  100% {\\n    max-height: 0;\\n    padding: 0;\\n    opacity: 0; } }\\n\\n@keyframes MessageMoveOut {\\n  0% {\\n    max-height: 150px;\\n    padding: 8px;\\n    opacity: 1; }\\n  100% {\\n    max-height: 0;\\n    padding: 0;\\n    opacity: 0; } }\\n\\n.ant-message-rtl {\\n  direction: rtl; }\\n\\n.ant-message-rtl span {\\n  direction: rtl; }\\n\\n.ant-message-rtl .anticon {\\n  margin-right: 0;\\n  margin-left: 8px; }\\n\", \"\"]);\n\n// exports\n","\r\nimport React                from 'react';\r\nimport { Link }             from 'react-router-dom';\r\nimport Function                 from '../../service/FunctionService.jsx';\r\nimport Pagination           from 'antd/lib/pagination';\r\nimport { Form } from '@ant-design/compatible';\r\nimport '@ant-design/compatible/assets/index.css';\r\nimport { Table, Divider, Button, Card, Popconfirm, Tooltip, Input, message } from 'antd';\r\nimport  LocalStorge         from '../../util/LogcalStorge.jsx';\r\nconst FormItem = Form.Item;\r\nconst Search = Input.Search;\r\nconst localStorge = new LocalStorge();\r\nconst _function = new Function();\r\nimport './function.scss';\r\nconst EditableContext = React.createContext();\r\n\r\nconst EditableRow = ({ form, index, ...props }) => (\r\n  <EditableContext.Provider value={form}>\r\n    <tr {...props} />\r\n  </EditableContext.Provider>\r\n);\r\n\r\nconst EditableFormRow = Form.create()(EditableRow);\r\n\r\nclass EditableCell extends React.Component {\r\n  getInput = () => {\r\n    \r\n    return <Input />;\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      editing,\r\n      dataIndex,\r\n      title,\r\n      inputType,\r\n      record,\r\n      index,\r\n      ...restProps\r\n    } = this.props;\r\n    return (\r\n      <EditableContext.Consumer>\r\n        {(form) => {\r\n          const { getFieldDecorator } = form;\r\n          return (\r\n            <td {...restProps}>\r\n              {editing ? (\r\n                <FormItem style={{ margin: 0 }}>\r\n                  {getFieldDecorator(dataIndex, {\r\n                    rules: [{\r\n                      required: true,\r\n                      message: `Please Input ${title}!`,\r\n                    }],\r\n                    initialValue: record[dataIndex],\r\n                  })(this.getInput())}\r\n                </FormItem>\r\n              ) : restProps.children}\r\n            </td>\r\n          );\r\n        }}\r\n      </EditableContext.Consumer>\r\n    );\r\n  }\r\n}\r\nclass FunctionClass extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            list            : [],\r\n            pageNum         : 1,\r\n            perPage         : 10,\r\n            listType        :'list',\r\n            className:'',\r\n            editingKey: ''\r\n        };\r\n        this.columns = [{\r\n            title: 'ID',\r\n            dataIndex: 'class_id',\r\n            key: 'class_id',\r\n            className:'headerRow',\r\n          },{\r\n            title: '类别名称',\r\n            dataIndex: 'class_name',\r\n            key: 'class_name',\r\n            className:'headerRow',\r\n            editable: true,\r\n          },{\r\n            title: '操作',\r\n            dataIndex: '操作',\r\n            className:'headerRow',\r\n            render: (text, record) => {\r\n                const editable = this.isEditing(record);\r\n                return (\r\n                  <div>\r\n                    {editable ? (\r\n                      <span>\r\n                        <EditableContext.Consumer>\r\n                          {form => (\r\n                            <a\r\n                              href=\"javascript:;\"\r\n                              onClick={() => this.save(form, record.key)}\r\n                              style={{ marginRight: 8 }}\r\n                            >\r\n                              保存\r\n                            </a>\r\n                          )}\r\n                        </EditableContext.Consumer>\r\n                        <Popconfirm\r\n                          title=\"确定取消吗?\"\r\n                          onConfirm={() => this.cancel(record.key)}\r\n                        >\r\n                          <a>取消</a>\r\n                        </Popconfirm>\r\n                      </span>\r\n                    ) : (\r\n                      <div><a onClick={() => this.edit(record.key)}>编辑</a>\r\n                        <Divider type=\"vertical\" />\r\n                        <a onClick={()=>this.deleteFunctionClss(`${record.key}`)} href=\"javascript:;\">删除</a>\r\n                        </div>\r\n                    )}\r\n                  </div>\r\n                );\r\n              },\r\n            },\r\n          ];\r\n    }\r\n    componentDidMount(){\r\n        this.loadFunctionClassList();\r\n    }\r\n    loadFunctionClassList(){\r\n        let listParam = {};\r\n        listParam.pageNum  = this.state.pageNum;\r\n        listParam.perPage  = this.state.perPage;\r\n       \r\n        _function.getAllFunctionClass(listParam).then(response => {\r\n            this.setState({list:response.data});\r\n        }, errMsg => {\r\n            this.setState({\r\n                list : []\r\n            });\r\n            // _mm.errorTips(errMsg);\r\n        });\r\n    }\r\n    // 页数发生变化的时候\r\n    onPageNumChange(pageNum){\r\n        this.setState({\r\n            pageNum : pageNum\r\n        }, () => {\r\n            this.loadFunctionClassList();\r\n        });\r\n    }\r\n    // 数据变化的时候\r\n    onValueChange(e){\r\n        let name    = e.target.name,\r\n            value   = e.target.value.trim();\r\n        this.setState({\r\n            [name] : value\r\n        });\r\n    }\r\n    \r\n    deleteFunctionClss(id){\r\n        if(confirm('确认删除吗？')){\r\n            let obj={class_id:id};\r\n            _function.deleteFunctionClss(obj).then(response => {\r\n                message.success(\"删除成功\");\r\n                this.loadFunctionClassList();\r\n            }, errMsg => {\r\n                message.error(\"删除失败\");\r\n            });\r\n        }\r\n    }\r\n    saveClick(value){\r\n        if(value!=''  && value!=null){\r\n            let obj={class_name:value};\r\n            _function.saveFunctionClass(obj).then(response=>{\r\n                if(response.resultCode == \"1000\"){\r\n                    message.success(\"保存成功\");\r\n                    this.setState({className:''});\r\n                }\r\n                this.loadFunctionClassList();\r\n            });\r\n        }\r\n        \r\n    }\r\n    onValueChange(e){\r\n        let name = e.target.name,\r\n            value = e.target.value.trim();\r\n           this.setState({[name]:value});  \r\n     }\r\n     isEditing = (record) => {\r\n        return record.key === this.state.editingKey;\r\n      };\r\n    \r\n      edit(key) {\r\n        this.setState({ editingKey: key });\r\n      }\r\n    \r\n      save(form, key) {\r\n        form.validateFields((error, row) => {\r\n          if (error) {\r\n            return;\r\n          }\r\n          const newData = [...this.state.list];\r\n          const index = newData.findIndex(item => key === item.key);\r\n          if (index > -1) {\r\n            const item = newData[index];\r\n            const obj=row;\r\n            obj.class_id=key;\r\n            _function.updateFunctionClass(obj).then(response=>{\r\n                if(response.resultCode == \"1000\"){\r\n                    newData.splice(index, 1, {\r\n                        ...item,\r\n                        ...row,\r\n                    });\r\n                    this.setState({ list: newData, editingKey: '' });\r\n                }else{\r\n                    message.error(\"保存失败\");\r\n                    this.loadFunctionClassList();\r\n                }\r\n            });\r\n            \r\n          } else {\r\n            newData.push(row);\r\n            this.setState({ list: newData, editingKey: '' });\r\n          }\r\n        });\r\n      }\r\n    \r\n      cancel = () => {\r\n        this.setState({ editingKey: '' });\r\n      };\r\n    \r\n    render(){\r\n        this.state.list.map((item,index)=>{\r\n            item.key=item.class_id;\r\n        })\r\n        const components = {\r\n            body: {\r\n              row: EditableFormRow,\r\n              cell: EditableCell,\r\n            },\r\n          };\r\n      \r\n          const columns = this.columns.map((col) => {\r\n            if (!col.editable) {\r\n              return col;\r\n            }\r\n            return {\r\n              ...col,\r\n              onCell: record => ({\r\n                record,\r\n                inputType: col.dataIndex === 'text',\r\n                dataIndex: col.dataIndex,\r\n                title: col.title,\r\n                editing: this.isEditing(record),\r\n              }),\r\n            };\r\n          });\r\n        \r\n       \r\n        return (\r\n            <div id=\"page-wrapper\">\r\n            <Card title=\"类别管理\">\r\n                <Tooltip>\r\n                    <Search\r\n                        placeholder=\"输入新类别名称\"\r\n                        enterButton=\"新建类别\"\r\n                        size=\"large\"\r\n                        style={{ width: 300,marginBottom:'10px' }}\r\n                        name='className'\r\n                        onSearch={value =>this.saveClick(value)}\r\n                        />\r\n                </Tooltip>\r\n                <Table dataSource={this.state.list} columns={columns}  pagination={false}\r\n                components={components} rowClassName=\"editable-row\"/>\r\n                 {/* <Pagination current={this.state.pageNum} \r\n                    total={this.state.total} \r\n                    onChange={(pageNum) => this.onPageNumChange(pageNum)}/>  */}\r\n            </Card>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default FunctionClass;"],"sourceRoot":""}