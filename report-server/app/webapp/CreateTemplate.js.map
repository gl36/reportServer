{"version":3,"sources":["webpack:///./src/page/query/CreateTemplate.jsx"],"names":["FormItem","Form","Item","Option","RadioGroup","Group","TextArea","TabPane","ButtonGroup","Column","ColumnGroup","CreateTemplate","props","state","in","name","render","event","drag","width","inLayout","project","components","c1","C2","C3","ev","colIndex","param","dataTransfer","getData","aIn","setState","setData","target","id","alert","refs","innerHTML","background","padding","height","marginLeft","onSaveButtonClick","map","item","index","border","drop","preventDefault","React","Component"],"mappings":"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","file":"CreateTemplate.js","sourcesContent":["import React from 'react'\r\nimport { CloseOutlined, SaveOutlined } from '@ant-design/icons';\r\nimport { Form } from '@ant-design/compatible';\r\nimport '@ant-design/compatible/assets/index.css';\r\nimport {\r\n    Card,\r\n    Button,\r\n    Table,\r\n    Input,\r\n    Divider,\r\n    Checkbox,\r\n    Dropdown,\r\n    Select,\r\n    Radio,\r\n    message,\r\n    Modal,\r\n    DatePicker,\r\n    InputNumber,\r\n    Switch,\r\n    Row,\r\n    Col,\r\n    Tabs,\r\n    Menu,\r\n} from 'antd';\r\nimport moment from 'moment';\r\nimport 'moment/locale/zh-cn';\r\n\r\n\r\n\r\nimport CodeMirror from 'react-codemirror';\r\nimport 'codemirror/lib/codemirror.css';\r\nimport 'codemirror/mode/sql/sql';\r\nimport 'codemirror/theme/ambiance.css';\r\nimport EditIn from './EditIn.jsx';\r\nimport EditOut from './EditOut.jsx';\r\nimport FunctionService from '../../service/FunctionService.jsx'\r\nimport HttpService from '../../util/HttpService.jsx';\r\n\r\nimport DbService from '../../service/DbService.jsx'\r\nimport './query.scss';\r\nimport { array } from 'prop-types';\r\n\r\nconst FormItem = Form.Item;\r\nconst Option = Select.Option;\r\nconst RadioGroup = Radio.Group;\r\nconst TextArea = Input.TextArea;\r\nconst TabPane = Tabs.TabPane;\r\nconst ButtonGroup = Button.ButtonGroup;\r\nconst { Column, ColumnGroup } = Table;\r\n\r\n\r\n\r\n\r\n\r\nclass CreateTemplate extends React.Component {\r\n\r\n    state = {};\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            in: [{\r\n                name: \"项目编码\",\r\n                render: <div>项目编码<Input id=\"0\" value=\"aa\" draggable=\"true\" onDragStart={(event) => this.drag(event)} style={{ width: '100px' }} /></div>\r\n            },\r\n            {\r\n                name: \"项目类型\",\r\n                render: <div id=\"1\" draggable=\"true\" onDragStart={(event) => this.drag(event)}>项目类型:<Select value=\"bb\" style={{ width: '100px' }} /></div>\r\n            },\r\n            {\r\n                name: \"创建时间\",\r\n                render: <div>创建时间<Input id=\"2\" value=\"cc\" draggable=\"true\" onDragStart={(event) => this.drag(event)} style={{ width: '100px' }} /></div>\r\n            },\r\n            {\r\n                name: \"项目经理\",\r\n                render: <div>项目经理<Input id=\"3\" value=\"dd\" draggable=\"true\" onDragStart={(event) => this.drag(event)} style={{ width: '100px' }} /></div>\r\n            }\r\n            ],\r\n            inLayout: [{\r\n                render: <div />\r\n            }, {\r\n                render: <div />\r\n            }, {\r\n                render: <div />\r\n            }, {\r\n                render: <div />\r\n            }\r\n            ],\r\n            project: \"aaa\",\r\n            components: {\r\n                c1: <Input id=\"1\" value=\"1\" />,\r\n                C2: <Input id=\"1\" value=\"2\" />,\r\n                C3: <Input id=\"1\" value=\"3\" />\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n\r\n    drop(ev, colIndex) {\r\n        // alert(ev.dataTransfer.getData(\"param\"));\r\n        // ev.preventDefault();\r\n        let param = ev.dataTransfer.getData(\"param\");\r\n        // let aInput = this.state.in[param];\r\n        // let t = ev.target.id;\r\n        // this.state.in[1] = aInput;\r\n        let aIn = this.state.in[param];\r\n        let inLayout = this.state.inLayout;\r\n        inLayout[colIndex] = aIn;\r\n        //com[key] = <Input value=\"aa\" />;\r\n        this.setState({ inLayout: inLayout });\r\n    }\r\n    drag(ev) {\r\n        ev.dataTransfer.setData(\"param\", ev.target.id);\r\n    }\r\n    onSaveButtonClick(){\r\n        alert(this.refs.in.innerHTML);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"page-wrapper\" style={{ background: '#ECECEC', padding: '0px' }}>\r\n                <Card title=\"创建模板\" bodyStyle={{ padding: \"5px\" }} headStyle={{ height: '60px' }}\r\n                    extra={\r\n                        <span>\r\n                            <Button style={{ marginLeft: 8 }} onClick={() => this.onSaveButtonClick()}>\r\n                                保存 <SaveOutlined />\r\n                            </Button>\r\n                            <Button style={{ marginLeft: 8 }}>\r\n                                关闭 <CloseOutlined />\r\n                            </Button>\r\n                        </span>\r\n\r\n                    }>\r\n                    <Row gutter={0}>\r\n\r\n                        <Col span={6}>\r\n                            <Card>\r\n                                {this.state.in.map((item, index) =>\r\n                                    <Row>\r\n                                        <Col>{item.render}</Col>\r\n                                    </Row>)\r\n\r\n                                }\r\n                            </Card>\r\n                        </Col>\r\n\r\n                        <Col span={18}>\r\n\r\n\r\n                            <Card  ref='in'>\r\n                                <Row>\r\n                                    {\r\n                                        // Object.keys(this.state.components).map((key) =>\r\n                                        //     <Col style={{ border: \"1px solid red\", height: \"80px\", width: \"400px\" }}\r\n                                        //         onDrop={(ev) => this.drop(ev, key)}\r\n                                        //         onDragOver={(ev) => ev.preventDefault()}>\r\n                                        //         {this.state.components[key]}\r\n                                        //     </Col>)\r\n                                        this.state.inLayout.map((item, index) => {\r\n                                        if(index)  \r\n                                        return(\r\n                                        <Col span={12} style={{ border: \"1px dotted #785\", height: \"50px\" }}\r\n                                           onDrop={(ev) => this.drop(ev, index)}\r\n                                           onDragOver={(ev) => ev.preventDefault()}>\r\n                                            {item.render}\r\n                                        </Col>);\r\n                                            \r\n                                        })\r\n\r\n                                    }\r\n                                </Row>\r\n\r\n\r\n                            </Card>\r\n\r\n                        </Col>\r\n                    </Row>\r\n                </Card>\r\n\r\n            </div >\r\n        );\r\n    }\r\n\r\n}\r\nexport default CreateTemplate; //= Form.create({})(CreateTemplate);"],"sourceRoot":""}