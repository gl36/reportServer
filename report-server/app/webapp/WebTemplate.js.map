{"version":3,"sources":["webpack:///./src/page/query/WebTemplate.jsx","webpack:///./src/service/QueryService.jsx","webpack:///./src/util/HttpService.jsx"],"names":["localStorge","LocalStorge","_query","QueryService","WebTemplate","props","state","path","match","params","userId","getStorage","localPath","loadHtml","nextProps","newpath","oldpath","setState","MyReportUrl","then","window","getServerUrl","decodeURIComponent","replace","response","webPath","errorTips","errMsg","border","width","height","React","Component","url","param","HttpService","post","JSON","stringify","name","selectClassId","selectID","page","qryId","outId","obj","n","undefined","location","href","Promise","resolve","reject","myurl","getBaseUrl","console","log","fullUrl","opts","method","headers","credentials","body","fetch","json","catch","error"],"mappings":"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","file":"WebTemplate.js","sourcesContent":["import React        from 'react';\r\nimport QueryService     from '../../service/QueryService.jsx';\r\nimport  LocalStorge  from '../../util/LogcalStorge.jsx';\r\nconst localStorge = new LocalStorge();\r\nconst _query      = new QueryService();\r\n\r\n\r\nclass WebTemplate extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            path:this.props.match.params.path,\r\n            userId:localStorge.getStorage('userInfo').userId,\r\n            localPath:\"\"\r\n        };\r\n    }\r\n    componentDidMount(){\r\n        this.loadHtml();\r\n    }\r\n   //组件更新时被调用 \r\n   componentWillReceiveProps(nextProps){\r\n    let newpath = nextProps.match.params.path;\r\n    let oldpath=this.state.path;\r\n    //如果qryId发生变化则这个页面全部重新加载\r\n    if(oldpath!=newpath){\r\n        this.setState({\r\n            path:newpath,localPath:\"\"\r\n        },function(){\r\n            this.loadHtml();\r\n        });\r\n    }\r\n   }\r\n    loadHtml(){\r\n        _query.MyReportUrl().then(response => {\r\n           this.setState({localPath: window.getServerUrl()+\"report/static/\"+decodeURIComponent(decodeURIComponent(this.state.path)).replace(response.webPath,\"\")});\r\n        }, errMsg => {\r\n            localStorge.errorTips(errMsg);\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div id=\"page-wrapper\">\r\n                <iframe style={{border:0,width:\"100%\",height:630,}} src={this.state.localPath}/>\r\n            </div>\r\n        );\r\n  }\r\n}\r\n\r\n\r\nexport default WebTemplate;","import HttpService from '../util/HttpService.jsx';\r\nexport default class QueryService {\r\n    // 获取函数列表\r\n    getCategoryList() {\r\n        let url = \"reportServer/select/getSelectClass\";\r\n        let param = {};  \r\n        return HttpService.post(url,param);\r\n    }\r\n    // 获取函数列表\r\n    getSelectClassTree() {\r\n        let url = \"reportServer/select/getSelectClassTree\";\r\n        let param = {};  \r\n        return HttpService.post(url,param);\r\n    }\r\n    // 获取权限可访问列表\r\n    getQueryClassTree(userId) {\r\n        let url = \"reportServer/auth/getMenuListNew\";\r\n        let param = {userId:userId};  \r\n        return HttpService.post(url,JSON.stringify(param));\r\n    }\r\n    //获取staticReport目录下的文件目录\r\n    getMyReports(){\r\n        let url = \"reportServer/web/getDirectory\";\r\n        return HttpService.post(url,null);\r\n    }\r\n    //获取需要进行替换的访问目录路径\r\n    MyReportUrl(){\r\n        let url = \"reportServer/web/MyReportUrl\";\r\n        return HttpService.post(url,null);\r\n    }\r\n    getReportNameList(name){\r\n        let url=\"reportServer/select/getSelectName/\"+name;\r\n        return HttpService.post(url,{});\r\n    }\r\n    getQueryCriteria(selectClassId){\r\n        let url=\"reportServer/query/getQueryParam/\"+selectClassId;\r\n        return HttpService.post(url,{});\r\n    }\r\n    execSelect(selectClassId,selectID,param){\r\n        let url=\"reportServer/query/execQuery/\"+selectID+\"/\"+selectClassId;\r\n        return HttpService.post(url,JSON.stringify(param));\r\n    }\r\n    getDictionaryList(param,page){\r\n        let url=\"reportServer/dict/getDictValueByID/\"+param;\r\n        return HttpService.post(url,JSON.stringify(page));\r\n    }\r\n    getAllQueryClass(){\r\n        let url = \"reportServer/query/getAllQueryClass\";  \r\n        return HttpService.post(url, '');\r\n    }\r\n    saveQueryClass(param){\r\n        let url = \"reportServer/query/createQueryClassInfo\";\r\n        return HttpService.post(url, JSON.stringify(param));\r\n    }\r\n    updateQueryClass(param){\r\n        let url = \"reportServer/query/updateQueryClassInfo\";\r\n        return HttpService.post(url, JSON.stringify(param));\r\n    }\r\n    deleteQueryClass(param){\r\n        let url = \"reportServer/query/deleteQueryClassInfo\";\r\n        return HttpService.post(url, JSON.stringify(param));\r\n    }\r\n    selectLinkValue(qryId,outId){\r\n        let url = \"reportServer/query/getQueryOutLink/\"+qryId+\"/\"+outId;;\r\n        return HttpService.post(url,{});\r\n    }\r\n\r\n     // 获取权限可访问列表\r\n     getQueryClassTreetwo(userId) {\r\n        let url = \"reportServer/auth/getClassId\";\r\n        let param = {userId:userId};  \r\n        return HttpService.post(url,JSON.stringify(param));\r\n    }\r\n    getQryNameByClassId(obj){\r\n        let url = \"reportServer/auth/getQryNameByClassId\";\r\n        return HttpService.post(url,JSON.stringify(obj));\r\n    }\r\n    getAllQueryNameList(param){\r\n        let url = \"reportServer/query/getAllQueryNameList\";\r\n        return HttpService.post(url,JSON.stringify(param));\r\n    }\r\n    getCubeListInAuth(userId){\r\n        let url = \"reportServer/auth/getCubeListInAuth\";\r\n        let param = {userId:userId};  \r\n        return HttpService.post(url,JSON.stringify(param));\r\n    }\r\n    getDashboardListInAuth(userId){\r\n        let url = \"reportServer/auth/getDashboardListInAuth\";\r\n        let param = {userId:userId};  \r\n        return HttpService.post(url,JSON.stringify(param));\r\n    }\r\n}\r\n","import 'whatwg-fetch';\r\nimport  LocalStorge  from './LogcalStorge.jsx';\r\nconst localStorge = new LocalStorge();\r\nexport default class HttpService {\r\n    \r\n    static getBaseUrl(){\r\n\r\n        var url=window.getServerUrl();//\"http://localhost:8080/\";\r\n        return url;\r\n    }\r\n    \r\n    //\r\n    static post(url,param,n){\r\n        if((undefined==localStorge.getStorage('userInfo') && url!='/reportServer/user/encodePwd' && url!='/reportServer/user/Reactlogin') || (''==localStorge.getStorage('userInfo')  && url!='/reportServer/user/encodePwd' && url!='/reportServer/user/Reactlogin')){\r\n            window.location.href='#login';\r\n            return  new Promise((resolve, reject) => {});\r\n        }else{\r\n            let myurl=n?'http://192.168.206.49:9601/':HttpService.getBaseUrl()\r\n            console.log(myurl)\r\n            const fullUrl = myurl + url;\r\n            let opts = {\r\n                method: 'POST',\r\n                headers: {\r\n                    credentials: JSON.stringify(localStorge.getStorage('userInfo') || '')\r\n                },\r\n                body: param\r\n            };\r\n\r\n            return fetch(fullUrl, opts).then((response) => {\r\n                    //console.log(response.json())\r\n                    return response.json();\r\n                }).catch((error)=>{\r\n                    return error.json();\r\n                });\r\n        }\r\n    }\r\n\r\n    static getFile(url){\r\n        if((undefined==localStorge.getStorage('userInfo') && url!='/reportServer/user/encodePwd' && url!='/reportServer/user/Reactlogin') || (''==localStorge.getStorage('userInfo')  && url!='/reportServer/user/encodePwd' && url!='/reportServer/user/Reactlogin')){\r\n            window.location.href='#login';\r\n            return  new Promise((resolve, reject) => {});\r\n        }else{\r\n            const fullUrl = HttpService.getBaseUrl() + url;\r\n            let opts = {\r\n                method: 'GET',\r\n                headers: {\r\n                    credentials: JSON.stringify(localStorge.getStorage('userInfo') || '')\r\n                },\r\n             };\r\n\r\n            return fetch(fullUrl, opts);\r\n        }\r\n\r\n    }\r\n\r\n          \r\n    }\r\n"],"sourceRoot":""}